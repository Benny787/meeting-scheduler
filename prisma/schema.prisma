generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id             String          @id @default(cuid())
  name           String?
  email          String?         @unique
  emailVerified  DateTime?
  image          String?         
  avatarUrl      String?

  accounts       Account[]
  sessionsAuth   Session[]
  sessions       SessionUser[]
  hostedSessions MeetingSession[] @relation("Host")
}


model MeetingSession {
  id        String         @id @default(cuid())
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  data      Json
  users     SessionUser[]
  hostId    String?        
  host      User?          @relation("Host", fields: [hostId], references: [id])
}

model SessionUser {
  id        String   @id @default(cuid())
  session   MeetingSession  @relation(fields: [sessionId], references: [id])
  sessionId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  joinedAt  DateTime @default(now())
}

// === üîê Required by NextAuth below ===

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? 
  access_token       String? 
  expires_at         Int?    
  token_type         String? 
  scope              String? 
  id_token           String? 
  session_state      String? 

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
